name: Synchronize the example with the template
on:
  push:
    branches: [main]

jobs:
  synchronize_example:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: rust-gh-example
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run cargo generate
        uses: cargo-generate/cargo-generate-action@v0.20.0
        with:
          name: ${{ env.PROJECT_NAME }}
          template: template
          arguments: "--template-values-file .github/workflows/template_values.toml -d gh-username=${{ github.repository_owner }} --verbose"

      - name: Generate lockfile
        run: |
          cd $PROJECT_NAME
          cargo generate-lockfile

      - name: Check for references
        run: |
          if git ls-remote --exit-code git@github.com:${{ github.repository_owner }}/${{ env.PROJECT_NAME }}.git; then
            echo "References found in the remote repo"
          else
            echo "No references found in the remote repo"
            mkdir tmp && cd tmp
            git config user.name github-actions
            git config user.email github-actions@github.com
            git init
            git branch -M main
            git remote add origin git@github.com:PythonGermany/rust-gh-example.git
            git commit --allow-empty -m "Initial commit"
            git push -u origin main
            rm -rf tmp
          fi

      - name: Checkout old example
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.PROJECT_NAME }}
          path: ${{ env.PROJECT_NAME }}.old
          ssh-key: ${{ secrets.GH_EXAMPLE_DEPLOY_SECRET }}

      - name: update example
        run: cp -rf ${{ env.PROJECT_NAME }}.old/.git ${{ env.PROJECT_NAME }}
      - name: commit example
        run: |
          cd ${{ env.PROJECT_NAME }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "automatic update" -m "from $GITHUB_REPOSITORY@$GITHUB_SHA"
            git push
          else
            echo "nothing to commit";
          fi
